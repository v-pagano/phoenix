{% from 'utilities/remove_files.jst' import remove_files with context %}

{% macro pb_strelka(pair, aligner='bwa') %}
{% do pair.callers.append('strelka2') %}
{% set normal_bam %}{{ pair.normal.gltype }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam{% endset %}
{% set tumor_bam %}{{ pair.tumor.gltype }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam{% endset %}
{% set indel_candidates %}{{ pair.gltype }}/somatic_structural_calls/manta/{{ pair.name }}/{{ pair.name }}.{{ aligner }}.manta.candidateSmallIndels.vcf.gz{% endset %}
{% set results_dir %}{{ pair.gltype }}/somatic_variant_calls/strelka2/{{ pair.name }}{% endset %}
{% set temp_dir %}temp/{{ pair.gltype }}/somatic_variant_calls/strelka2/{{ pair.name }}_{{ aligner }}{% endset %}
{% set all_vcf %}{{ results_dir }}/{{ pair.name }}.{{ aligner }}.strelka2.all.vcf.gz{% endset %}
{% set pass_vcf %}{{ results_dir }}/{{ pair.name }}.{{ aligner }}.strelka2.pass.vcf.gz{% endset %}

- name: pb_strelka_{{ pair.name }}_{{ aligner }}
  tags: [{{ pair.gltype }}, somatic, snp_indel_caller, strelka2, {{ pair.name }}]
  input:
    - {{ normal_bam }}
    - {{ tumor_bam }}
    - {{ indel_candidates }}
  output:
    - {{ temp_dir }}/results/variants/somatic.indels.vcf.gz
    - {{ temp_dir }}/results/variants/somatic.snvs.vcf.gz
    - {{ results_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.bam
    - {{ results_dir }}/evidence/{{ pair.normal.name }}.{{ aligner }}.strelka2.realigned.bam.bai
    - {{ results_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.bam
    - {{ results_dir }}/evidence/{{ pair.tumor.name }}.{{ aligner }}.strelka2.realigned.bam.bai
  walltime: "24:00:00"
  sbatch_args: ['-p', 'gpu-dev', '--nodelist=dback-gpu03', '--exclusive']
  cmd: |
    set -eu
    set -o pipefail

    module load {{ constants.tools.parabricks.module }}
    module load {{ constants.tools.htslib.module }}
    module load {{ constants.tools.python_2_7_15.module }}
    module load {{ constants.tools.samtools.module }}

    {# Purge any existing run files prior to starting #}
    rm -r "{{ temp_dir }}" || true
    mkdir -p "{{ temp_dir }}"

    TAB=$'\t'
    cat <<EOF > "{{ temp_dir }}/callRegions.bed"
    {% for contig in constants.phoenix.calling_contigs %}
    {{ contig.contig }}${TAB}0${TAB}{{ contig.length }}
    {% endfor %}
    EOF

    bgzip -f "{{ temp_dir }}/callRegions.bed"
    tabix -f -p bed "{{ temp_dir }}/callRegions.bed.gz"

    pbrun strelka_workflow \
    --ref {{ constants.phoenix.reference_fasta }} \
    --in-tumor-bam {{ tumor_bam }} \
    --in-normal-bam {{ normal_bam }} \
    --tmp-dir {{ temp_dir }} \
    --out-prefix output


{% endmacro %}
